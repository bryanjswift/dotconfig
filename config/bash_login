###### Prompt Setup ######
function get_git_branch {
  git branch | awk '/^\*/ { print substr($0, 3, (length - 2)) }'
}
function get_git_tag {
  #git name-rev HEAD --tags --name-only | grep -v '^undefined$' | awk '/(^.*?)(\^0)?$/ { printf " ["; printf $1; print "]"; }'
  #git describe HEAD | grep -v 'fatal:' | perl -p -i -e "s/^(.*?)(-[0-9]+-g[a-zA-Z0-9]+)?$/ [\$1]/"
  git describe --exact-match HEAD 2>&1 | grep -v 'fatal' | awk '{ printf " ["; printf $1; print "]"; }'
}
function get_git_dirty {
  [[ 0 -eq `git status --porcelain | wc -l` ]] || echo "*"
}
function get_git_prompt {
  git branch &> /dev/null || return 1
  echo "$(get_git_tag) ($(get_git_branch)$(get_git_dirty))"
}

function gitPrompt {
	PS1="\h\[\033[0;33m\] \w\[\033[00m\]\$(get_git_prompt): "
	PS2='> '
	PS4='+ '
}
gitPrompt

###### Command Line ######
set -o vi

###### Environment Variables ######
# Dotconfig Home
export DOTCONFIG=$HOME/Documents/code/dotconfig
# In bash history: ignore duplicates, `ls`, `bg`, `fg`, `exit` commands
export HISTIGNORE="&:ls:[bf]g:exit"
# Homebrew
export CELLAR=`brew --cellar`
# environment variables for JVM development
export JAVA_HOME=$(/usr/libexec/java_home)
export SCALA_HOME=$HOME/Documents/src/scala/scala-2.8.0.final
export M2_REPOSITORY=$HOME/.m2/repository
export ANT_HOME=$HOME/Documents/src/java/apache-ant-1.8.3
export CLOJURE_EXT=$HOME/Documents/src/clojure/clojure-classpath
export ANDROID_SDK=$CELLAR/android-sdk/r10
export GAE_SDK=$HOME/Documents/src/gae/appengine-java-sdk-1.3.3
export REBEL_HOME=$HOME/Documents/src/java/jrebel
# EC2
export EC2_HOME=$HOME/.ec2
if [ -d $EC2_HOME ]; then
  export EC2_PRIVATE_KEY="$(/bin/ls "$EC2_HOME"/pk-*.pem | /usr/bin/head -1)"
  export EC2_CERT="$(/bin/ls "$EC2_HOME"/cert-*.pem | /usr/bin/head -1)"
  export EC2_AMITOOL_HOME="/usr/local/Library/LinkedKegs/ec2-ami-tools/jars"
  export EC2_ACCESS=`cat $EC2_HOME/access.key`
  export EC2_SECRET=`cat $EC2_HOME/secret.key`
fi
# Ruby
export RBENV=$HOME/.rbenv
export RUBIES=(~/.rbenv/versions/*)
# catalog files for compiling man pages
export XML_CATALOG_FILES="/opt/local/share/xml/docbook/4.2/catalog.xml /opt/local/share/xsl/docbook-xsl/catalog.xml"
# Source Control variables
export SVN_EDITOR=vim
export VISUAL=vim

###### Aliases ######
alias regex='java -classpath $HOME/Documents/code/java/javaregexdemo/classes/ regexdemo.AppRegexDemo'
alias trash='trash'
alias appcfg='$GAE_SDK/bin/appcfg.sh'
alias dev_appserver='$GAE_SDK/bin/dev_appserver.sh'
alias closure-compiler='java -jar $HOME/Documents/src/java/closure-compiler/compiler.jar'
alias packager='$HOME/Documents/code/mootools/packager/packager'
alias iaw='open -a/Applications/iA\ Writer.app'

###### Path ######
export ORIG_PATH=$PATH
# add to the path
export PATH=/usr/local/bin:/usr/local/sbin:$ANT_HOME/bin:$PATH
export PATH=/usr/local/share/npm/bin:$PATH # Add NPM globals to PATH
export PATH=$RBENV/bin:$PATH # Add rbenv scripts to PATH
# where to find compiled man pages
export MANPATH=/usr/local/man:$MANPATH

###### rbenv ######
eval "$(rbenv init -)"

###### maven autocomplete ######
if [ -f `brew --prefix`/etc/bash_completion ]; then
  . `brew --prefix`/etc/bash_completion
fi
if [ -f $DOTCONFIG/bash-completion/maven_bash_completion.bash ]; then
  . $DOTCONFIG/bash-completion/maven_bash_completion.bash
fi
[[ -s "$DOTCONFIG/scripts/na.sh" ]] && source "$DOTCONFIG/scripts/na.sh"
if [ -d $HOME/.tmuxinator/scripts ]; then
  [[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator
  source $HOME/.tmuxinator/scripts/tmuxinator_completion
fi
